body {
    background-image: url('../assets/images/background.jpg');
    height: 100%;
    min-width: 100%;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.header {
    padding: 20px;
    border: 2px solid black;
    background-color: #4C9DFA;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: white;
}

.container {
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

label {
    padding: 5px;
    border: 1px solid black;
    background-color: white;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: black;
    width: fit-content;
    margin: 20px auto;
    font-weight: bold;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

input[type="text"] {
    text-align: left;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

#nameInput {
    padding-top: 48px;
}

#keyInput {
    padding-top: 19.2px;
    padding-left: 18.24px;
}

#messageInput {
    max-width: 1152px;
    width: 58%;
}

#submitIndex {
    margin: 67.2px;
    transform: scale(2);
    background-color: #4C9DFA;
    color: white;
    border-color: black;
    border-radius: 0;
}

#submitMessage {
    background-color: #4C9DFA;
    color: white;
    border-color: black;
    border-radius: 0;
}

#instructions {
    padding: 20px;
    border: 2px solid black;
    background-color: #4C9DFA;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: white;
    max-width: 80%;
    width: 60%;
}

.input-container {
    width: 89%;
    max-width: 1152px;
    margin: 15px auto;
}

.chat-container {
    max-width: 720px;
    width: 58%;
    height: 300px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #fff;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

.chat-box {
    flex: 1;
    padding: 10px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

/* Learned that you can used pseudo-class selector called nth-child
that can be used to select elements based on their position, such as
even and odd being used to select every even and odd-numbered element,
and apply the correct styling based on if there an odd or even instance
of this element. Mainly for example because messages aren't going to be
in a set even and odd order.*/
.message:nth-child(odd) {
    background-color: #d1e7ff;
    align-self: flex-start;
}

.message:nth-child(even) {
    background-color: #e1ffc7;
    align-self: flex-end;
}

/* ----------------------------- */
/* Handles Loading The API When I Get To That.*/
.loading-indicator {
    max-height: 50px;
    max-width: 50px;
}